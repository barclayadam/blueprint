{
  "openapi": "3.0.0",
  "info": {
    "title": "Auto-generated API specification",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.blueprint-testing.com/api/"
    }
  ],
  "paths": {
    "/resources/{AnId}": {
      "get": {
        "tags": [
          "OpenApi"
        ],
        "summary": "The OpenApiGetQuery summary",
        "description": "Some more remarks about this query.",
        "operationId": "OpenApiGet",
        "parameters": [
          {
            "name": "AnId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "title": "String",
              "type": "string"
            }
          },
          {
            "name": "ImplicitlyFromQuery",
            "in": "query",
            "description": "",
            "schema": {
              "title": "String",
              "type": "string"
            }
          },
          {
            "name": "DifferentNameForQuery",
            "in": "query",
            "description": "",
            "schema": {
              "title": "String",
              "type": "string"
            }
          },
          {
            "name": "ACookieValue",
            "in": "cookie",
            "description": "With some more documentation.",
            "schema": {
              "title": "String",
              "type": "string"
            }
          },
          {
            "name": "AHeaderValue",
            "in": "header",
            "description": "With some documentation.",
            "schema": {
              "title": "String",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Open"
                }
              }
            }
          },
          "500": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "AnotherSpecificProblemDetail": {
                    "value": {
                      "status": 404,
                      "title": "Missing data (will be 404).",
                      "type": "another_specific_problem_detail"
                    }
                  },
                  "OtherMissingData": {
                    "value": {
                      "status": 404,
                      "title": "Missing data again (will be 404)",
                      "type": "other_missing_data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "SomeErrorType": {
                    "value": {
                      "status": 400,
                      "title": "Invalid op (will be 400).",
                      "type": "some_error_type"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "When needed (will be 403).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "When needed (will be 401).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OpenApi"
        ],
        "summary": "The OpenApiPutCommand summary",
        "description": "",
        "operationId": "OpenApiPut",
        "parameters": [
          {
            "name": "AnId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "title": "String",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUpdatedOfOpen"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Open": {
        "id": "Open",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "$object",
          "$links",
          "$partial"
        ],
        "properties": {
          "$object": {
            "type": "string",
            "description": "The object type of this resource, used to indicate to clients what they\nare dealing with (i.e. 'user', 'account', 'group')."
          },
          "$links": {
            "type": "object",
            "description": "The links for this resource, other endpoints that apply to this resource\nin it's current state.",
            "additionalProperties": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "$partial": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether or not this resource is 'partial', an indication that not all properties have been\npopulated for performance reasons and a client should reload from the 'self' link to retrieve all values."
          },
          "aProperty": {
            "type": "string",
            "nullable": true
          }
        },
        "x-links": [
          {
            "rel": "update",
            "operationId": "OpenApiPut",
            "method": "PUT"
          }
        ]
      },
      "Link": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "href",
          "type"
        ],
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ProblemDetails": {
        "id": "ProblemDetails",
        "type": "object",
        "description": "A machine-readable format for specifying errors in HTTP API responses based on https://tools.ietf.org/html/rfc7807.",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\ndereferenced, it provide human-readable documentation for the problem type\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\n\"about:blank\".",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence\nof the problem, except for purposes of localization (e.g. using proactive content negotiation;\nsee [RFC7231], Section 3.4).",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "description": "Extension data that MAY contain additional, problem type specific details. Extension members appear in the same\nnamespace as other members of a problem type.",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "ValidationProblemDetails": {
        "id": "ValidationProblemDetails",
        "type": "object",
        "description": "A ProblemDetails for validation errors.",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when\ndereferenced, it provide human-readable documentation for the problem type\n(e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be\n\"about:blank\".",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence\nof the problem, except for purposes of localization (e.g. using proactive content negotiation;\nsee [RFC7231], Section 3.4).",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "description": "Extension data that MAY contain additional, problem type specific details. Extension members appear in the same\nnamespace as other members of a problem type.",
            "nullable": true,
            "additionalProperties": {}
          },
          "errors": {
            "type": "object",
            "description": "Gets the validation errors associated with this instance of ValidationProblemDetails.",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "OpenApiPutCommand": {
        "type": "object",
        "description": "The OpenApiPutCommand summary",
        "additionalProperties": false
      },
      "ResourceUpdatedOfOpen": {
        "id": "ResourceUpdatedOfOpen",
        "type": "object",
        "description": "A specific implementation of ResourceEvent`1 for events of change type Updated.",
        "additionalProperties": false,
        "required": [
          "data",
          "$object",
          "eventId",
          "changeType",
          "created",
          "resourceObject"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Open"
          },
          "$object": {
            "type": "string",
            "description": "Gets the object of this 'resource', which is \"event\"."
          },
          "eventId": {
            "type": "string",
            "description": "Gets the id of this event, for example 'timeEntry.updated' or 'account.approvals.enabled'."
          },
          "changeType": {
            "description": "Gets a the change type of this event, which is a higher-level version of the Type property,\nindicating whether the resource was updated, created or deleted.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResourceEventChangeType"
              }
            ]
          },
          "created": {
            "type": "string",
            "description": "Gets the created date of this event.",
            "format": "date-time"
          },
          "resourceObject": {
            "type": "string",
            "description": "Gets the type of resource represented."
          },
          "href": {
            "type": "string",
            "description": "Gets or sets the href of the resource this event represents, to be populated by the ResourceEventMiddleware\ncomponent from the resource type and id definition object.",
            "nullable": true
          },
          "changedValues": {
            "type": "object",
            "description": "Gets or sets a dictionary of previous values, used to identify what has actually changed\nbetween two resources, keyed on the property name with the previous value of the resource\nbeing the value.",
            "nullable": true,
            "additionalProperties": {}
          },
          "metadata": {
            "type": "object",
            "description": "Gets the metadata dictionary of this resource event, a simple bag of key value pairs\nof useful information that can be stored free-form against an event.",
            "nullable": true,
            "additionalProperties": {}
          },
          "secureData": {
            "type": "object",
            "description": "Gets a dictionary of security-related data that will NOT be persisted anywhere.",
            "nullable": true,
            "additionalProperties": {}
          },
          "correlationId": {
            "type": "string",
            "description": "Gets or sets the correlation id for this event, which can be used to tie it back to\nthe initial request that resulted in an event.",
            "nullable": true
          }
        }
      },
      "ResourceEventChangeType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Created",
          "Updated",
          "Deleted"
        ],
        "enum": [
          "Created",
          "Updated",
          "Deleted"
        ]
      }
    }
  }
}